{"version":3,"file":"lib.js","sourceRoot":"","sources":["../src/lib.ts"],"names":[],"mappings":"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","sourcesContent":["import parsePhoneNumber from 'libphonenumber-js';\nimport {\n  And,\n  ArrayOverlap,\n  FindOptionsOrder,\n  ILike,\n  In,\n  LessThanOrEqual,\n  MoreThanOrEqual,\n} from 'typeorm';\n\nimport { IPaginate, QueryDataType } from './types';\nimport { ReadStream } from 'fs';\n\n/**\n * @description Отлов ошибки\n * @param options - Объект параметров\n * @param options.error - Объект ошибки\n * @param options.message - Сообщение ошибки\n */\nexport const getError = ({ error, message }: { error?: unknown; message?: string }): void => {\n  if (error) console.error(error);\n  if (message) console.error(message);\n};\n\n/**\n * @description Создает объект с информацией о пагинации\n * @param {number} page - Текущая страница\n * @param {number} count - Общее количество записей\n * @param {number} limit - Сколько записей на одной странице,\n * @param {number} modelsNumber - Количество участвующих таблиц\n * @return Возвращает объект пагинации\n */\nexport const createPaginate = (\n  page: number,\n  count: number,\n  limit: number,\n  modelsNumber = 1,\n): IPaginate => {\n  const pages = Math.ceil(count / (limit * modelsNumber));\n\n  const paginate: IPaginate = {\n    page,\n    pages,\n    previous: page > 1 ? page - 1 : undefined,\n    next: page <= pages - 1 ? page + 1 : undefined,\n    count,\n    limit,\n  };\n\n  return paginate;\n};\n\n/**\n * @description Превращает страницу и лимит в то, сколько пропустить записей в orm\n * @param {number} page - Текущая страница\n * @param {number} limit - Сколько записей на одной странице,\n * @return Возвращает orm skip\n */\nexport const getPaginateSkip = (page: number, limit: number): number => {\n  return (page - 1) * limit;\n};\n\n/**\n * @description Валидация номера телефона\n * @param {string} phone - Номер телефона\n * @return {string} Возвращает либо пустую строку, либо отформатированный номер телефона\n * @example\n * const phone = formatPhone(+79885054219)\n * phone === \"+7 988 5054219\"\n */\nexport const formatPhone = (phone: string): string => {\n  const parsedPhone = parsePhoneNumber(phone);\n  if (!parsedPhone?.isValid()) return '';\n\n  return parsedPhone.formatInternational();\n};\n\n/**\n * @description Объединяет два 32 битных числа\n * @param {number} low - младшие 32 бита числа\n * @param {number} hight - старшие 32 бита числа\n * @return {number} Готовое число\n */\nexport const concatenateTwo32BitNumbers = (low: number, high: number): number => {\n  return (high >>> 0) * Math.pow(2, 32) + (low >>> 0);\n};\n\n/**\n * @description Проверяет page и limit на корректные границы\n * @param {number} page - Текущая страница\n * @param {number} limit - Сколько записей на одной странице,\n * @param {number} maxLimit - Максимально допустимое число записей\n * @return Возвращает объект с корректными значениями в допустимых пределах\n */\nexport const checkPageAndLimit = (\n  page: number,\n  limit: number,\n  maxLimit = 500,\n): {\n  checkedPage: number;\n  checkedLimit: number;\n} => {\n  const paginationData = {\n    checkedPage: page,\n    checkedLimit: limit,\n  };\n\n  if (page < 1) {\n    paginationData.checkedPage = 1;\n  }\n\n  if (limit < 1) {\n    paginationData.checkedLimit = 1;\n  }\n\n  if (limit > maxLimit) {\n    paginationData.checkedLimit = maxLimit;\n  }\n\n  return paginationData;\n};\n\n/**\n * @description Конвертация FileStream от multer в Buffer\n * @param fileStream - Объект FileStream\n */\nexport const fileStreamToBuffer = async (fileStream: ReadStream): Promise<Buffer> => {\n  const chunks: Uint8Array[] = [];\n\n  for await (const chunk of fileStream) {\n    chunks.push(chunk as Uint8Array);\n  }\n\n  return Buffer.concat(chunks);\n};\n\n/**\n * @description Создает queryData из параметров пагинации, сортирвоки и фильтрации\n * @param {number} page - Текущая страница\n * @param {number} limit - Сколько записей на одной странице,\n * @param {string} sortField - Название поля, по которому будет сортировка\n * @param {string} sortOrder - asc или desc\n * @param {string} filterType - and или or\n * @param {object} filter - Объект с полями для фильтрации внутри where\n * @param {object} search - Объект с полями для поиска внутри where\n * @return Возвращает объект с query data для запроса в orm\n */\nexport const createQueryData = <Entity>(\n  page: number,\n  limit: number,\n  sortField: string,\n  sortOrder: string,\n  filterType: string,\n  filter?: object,\n  search?: object,\n): QueryDataType<Entity> => {\n  const queryData = {\n    skip: getPaginateSkip(page, limit),\n    take: limit,\n  } as QueryDataType<Entity>;\n\n  if (sortField && sortOrder) {\n    queryData.order = {\n      [sortField]: sortOrder,\n    } as FindOptionsOrder<Entity>;\n  }\n\n  if (filter) {\n    let whereAnd = {};\n    let whereOr: object[] = [];\n\n    let priceFrom: number | undefined;\n    let priceTo: number | undefined;\n\n    let priorityFrom: number | undefined;\n    let priorityTo: number | undefined;\n\n    let createdAtFrom: Date | undefined;\n    let createdAtTo: Date | undefined;\n\n    let updatedAtFrom: Date | undefined;\n    let updatedAtTo: Date | undefined;\n\n    for (const [key, value] of Object.entries(filter)) {\n      let currentKey = key;\n      let currentValue;\n\n      if (\n        typeof value === 'object' &&\n        !Array.isArray(value) &&\n        typeof value?.getTime !== 'function'\n      ) {\n        const obj = JSON.parse(JSON.stringify(value)) as object;\n        const valueObject = {} as {\n          [key: string]: unknown;\n        };\n\n        for (const [key, value] of Object.entries(obj)) {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          valueObject[key] = typeof value === 'boolean' ? value : In(value);\n        }\n\n        currentValue = valueObject;\n      } else if (typeof value === 'boolean') {\n        currentValue = value;\n      } else {\n        if (key === 'priceFrom') {\n          priceFrom = value as number;\n          continue;\n        }\n\n        if (key === 'priceTo') {\n          priceTo = value as number;\n          continue;\n        }\n\n        if (key === 'priorityFrom') {\n          priorityFrom = value as number;\n          continue;\n        }\n\n        if (key === 'priorityTo') {\n          priorityTo = value as number;\n          continue;\n        }\n\n        if (key === 'createdAtFrom') {\n          createdAtFrom = value as Date;\n          continue;\n        }\n\n        if (key === 'createdAtTo') {\n          createdAtTo = value as Date;\n          continue;\n        }\n\n        if (key === 'updatedAtFrom') {\n          updatedAtFrom = value as Date;\n          continue;\n        }\n\n        if (key === 'updatedAtTo') {\n          updatedAtTo = value as Date;\n          continue;\n        }\n\n        if (Array.isArray(value) && value.length) {\n          // @NOTE тут перечисляются поля, которые массивы в базе данных и надо найти хотя бы одно вхождение.\n          const arraysFields = [{ key: 'sectionsOR', originalKey: 'sections' }];\n          const finded = arraysFields.find((item) => item.key === key);\n\n          if (finded) {\n            currentValue = ArrayOverlap(value);\n            currentKey = finded.originalKey;\n          } else {\n            currentValue = In(value);\n          }\n        } else if (Array.isArray(value)) {\n          currentValue = In(value);\n        }\n      }\n\n      if (currentValue) {\n        whereAnd = {\n          ...whereAnd,\n          [currentKey]: currentValue,\n        };\n\n        whereOr = [\n          ...whereOr,\n          {\n            [currentKey]: currentValue,\n          },\n        ];\n      }\n    }\n\n    if (priceFrom && priceTo) {\n      whereAnd = {\n        ...whereAnd,\n        price: And(MoreThanOrEqual(priceFrom), LessThanOrEqual(priceTo)),\n      };\n      whereOr = [...whereOr, { price: And(MoreThanOrEqual(priceFrom), LessThanOrEqual(priceTo)) }];\n    } else if (priceFrom) {\n      whereAnd = {\n        ...whereAnd,\n        price: MoreThanOrEqual(priceFrom),\n      };\n      whereOr = [...whereOr, { price: MoreThanOrEqual(priceFrom) }];\n    } else if (priceTo) {\n      whereAnd = {\n        ...whereAnd,\n        price: LessThanOrEqual(priceTo),\n      };\n      whereOr = [...whereOr, { price: LessThanOrEqual(priceTo) }];\n    }\n\n    if (priorityFrom && priorityTo) {\n      whereAnd = {\n        ...whereAnd,\n        priority: And(MoreThanOrEqual(priorityFrom), LessThanOrEqual(priorityTo)),\n      };\n      whereOr = [\n        ...whereOr,\n        { priority: And(MoreThanOrEqual(priorityFrom), LessThanOrEqual(priorityTo)) },\n      ];\n    } else if (priorityFrom) {\n      whereAnd = {\n        ...whereAnd,\n        priority: MoreThanOrEqual(priorityFrom),\n      };\n      whereOr = [...whereOr, { priority: MoreThanOrEqual(priorityFrom) }];\n    } else if (priorityTo) {\n      whereAnd = {\n        ...whereAnd,\n        priority: LessThanOrEqual(priorityTo),\n      };\n      whereOr = [...whereOr, { priority: LessThanOrEqual(priorityTo) }];\n    }\n\n    if (createdAtFrom && createdAtTo) {\n      whereAnd = {\n        ...whereAnd,\n        createdAt: And(MoreThanOrEqual(createdAtFrom), LessThanOrEqual(createdAtTo)),\n      };\n      whereOr = [\n        ...whereOr,\n        {\n          createdAt: And(MoreThanOrEqual(createdAtFrom), LessThanOrEqual(createdAtTo)),\n        },\n      ];\n    } else if (createdAtFrom) {\n      whereAnd = {\n        ...whereAnd,\n        createdAt: MoreThanOrEqual(createdAtFrom),\n      };\n      whereOr = [...whereOr, { createdAt: MoreThanOrEqual(createdAtFrom) }];\n    } else if (createdAtTo) {\n      whereAnd = {\n        ...whereAnd,\n        createdAt: LessThanOrEqual(createdAtTo),\n      };\n      whereOr = [...whereOr, { createdAt: LessThanOrEqual(createdAtTo) }];\n    }\n\n    if (updatedAtFrom && updatedAtTo) {\n      whereAnd = {\n        ...whereAnd,\n        updatedAt: And(MoreThanOrEqual(updatedAtFrom), LessThanOrEqual(updatedAtTo)),\n      };\n      whereOr = [\n        ...whereOr,\n        {\n          updatedAt: And(MoreThanOrEqual(updatedAtFrom), LessThanOrEqual(updatedAtTo)),\n        },\n      ];\n    } else if (updatedAtFrom) {\n      whereAnd = {\n        ...whereAnd,\n        updatedAt: MoreThanOrEqual(updatedAtFrom),\n      };\n      whereOr = [...whereOr, { updatedAt: MoreThanOrEqual(updatedAtFrom) }];\n    } else if (updatedAtTo) {\n      whereAnd = {\n        ...whereAnd,\n        updatedAt: LessThanOrEqual(updatedAtTo),\n      };\n      whereOr = [...whereOr, { updatedAt: LessThanOrEqual(updatedAtTo) }];\n    }\n\n    if (filterType === 'and') queryData.where = whereAnd;\n    else if (filterType === 'or') queryData.where = whereOr;\n  }\n\n  if (search) {\n    let searchWhere = {};\n\n    for (const [key, value] of Object.entries(search)) {\n      searchWhere = {\n        ...searchWhere,\n        [key]: ILike(`%${value}%`),\n      };\n    }\n\n    if (!queryData.where) queryData.where = searchWhere;\n    if (Array.isArray(queryData.where)) queryData.where = [...queryData.where, searchWhere];\n    else queryData.where = { ...searchWhere, ...queryData.where };\n  }\n\n  return queryData;\n};\n"]}
{"version":3,"file":"validation.pipe.js","sourceRoot":"","sources":["../../src/validation/validation.pipe.ts"],"names":[],"mappings":";;;;;;;;;AAAA,2CAAyF;AACzF,yDAAiD;AACjD,qDAA2C;AAI3C,iEAA6D;AAGtD,IAAM,cAAc,GAApB,MAAM,cAAc;IACzB,KAAK,CAAC,SAAS,CAAC,KAAc,EAAE,QAA0B;QACxD,IAAI,CAAC,QAAQ,CAAC,QAAQ;YAAE,OAAO,KAAK,CAAC;QAErC,MAAM,GAAG,GAAW,IAAA,gCAAY,EAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QAC3D,IAAI,OAAO,GAAG,KAAK,QAAQ;YAAE,OAAO,KAAK,CAAC;QAE1C,MAAM,MAAM,GAAG,MAAM,IAAA,0BAAQ,EAAC,GAAG,CAAC,CAAC;QAEnC,IAAI,MAAM,CAAC,MAAM,EAAE,CAAC;YAClB,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;gBAClC,IAAI,CAAC,GAAG,CAAC,WAAW;oBAAE,OAAO,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;gBAC/C,OAAO,GAAG,GAAG,CAAC,QAAQ,MAAM,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YAC1E,CAAC,CAAC,CAAC;YAEH,MAAM,QAAQ,GAAG;gBACf,UAAU,EAAE,mBAAU,CAAC,WAAW;gBAClC,KAAK,EAAE,aAAa;gBACpB,QAAQ;aAC4B,CAAC;YAEvC,MAAM,IAAI,0CAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC1D,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;CACF,CAAA;AAzBY,wCAAc;yBAAd,cAAc;IAD1B,IAAA,mBAAU,GAAE;GACA,cAAc,CAyB1B","sourcesContent":["import { ArgumentMetadata, HttpStatus, Injectable, PipeTransform } from '@nestjs/common';\nimport { plainToClass } from 'class-transformer';\nimport { validate } from 'class-validator';\n\nimport { IResponse } from '../types';\n\nimport { ValidationException } from './validation.exception';\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform<unknown> {\n  async transform(value: unknown, metadata: ArgumentMetadata): Promise<unknown> {\n    if (!metadata.metatype) return value;\n\n    const obj: object = plainToClass(metadata.metatype, value);\n    if (typeof obj !== 'object') return value;\n\n    const errors = await validate(obj);\n\n    if (errors.length) {\n      const messages = errors.map((err) => {\n        if (!err.constraints) return `${err.property}`;\n        return `${err.property} - ${Object.values(err.constraints).join(', ')}`;\n      });\n\n      const response = {\n        statusCode: HttpStatus.BAD_REQUEST,\n        error: 'Bad request',\n        messages,\n      } as IResponse<HttpStatus.BAD_REQUEST>;\n\n      throw new ValidationException(JSON.stringify(response));\n    }\n    return value;\n  }\n}\n"]}